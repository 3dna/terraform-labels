name: 'Terraform GitHub Actions'
on:
  pull_request:
    branches:
      - master

jobs:
  fmt:
    name: 'terraform fmt'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2.3.4

      - name: 'Terraform Format'
        uses: 'clouddrove/github-actions@v7.0'
        with:
          actions_subcommand: 'fmt'

  validate:
    name: 'terraform validate'
    needs:
      - fmt
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2.3.4

      - name: 'Terraform init'
        uses: 'clouddrove/github-actions@v7.0'
        with:
          actions_subcommand: 'init'
          tf_actions_working_dir: ./_example

      - name: 'Terraform validate'
        uses: 'clouddrove/github-actions@v7.0'
        with:
          actions_subcommand: 'validate'
          tf_actions_working_dir: ./_example
  plan:
    name: 'terraform plan'
    needs: fmt
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2.3.4

      - name: 'Terraform init'
        uses: 'clouddrove/github-actions@v7.0'
        with:
          actions_subcommand: 'init'
          tf_actions_working_dir: ./_example

      - name: 'Terraform plan'
        id: plan
        uses: 'clouddrove/github-actions@v7.0'
        with:
          actions_subcommand: 'plan'
          tf_actions_working_dir: ./_example

      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`${process.env.PLAN}\`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  pre-commit:
    name: 'Pre-Commit'
    needs:
      - fmt
      - plan
      - validate
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2.3.4

      - name: 'Install Tflint'
        run: |
         curl https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      - name: 'Pre-Commit üîé'
        uses: pre-commit/action@v2.0.3
        continue-on-error: true
